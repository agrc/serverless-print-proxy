name: Test, Build, and Deploy to GCP

on:
  push:
  pull_request:

concurrency:
  group: "${{ github.head_ref || github.ref }}"
  cancel-in-progress: true

env:
  SERVICE_NAME: printproxy

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    env:
      OPEN_QUAD_WORD: fake-quad-word

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Test
        run: npm run test-ci

  deploy-staging:
    name: Build and Deploy to Staging
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Staging
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: npm ci

      - id: auth
        name: üóùÔ∏è Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üê≥ Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@v1

      - name: üóùÔ∏è Authenticate Docker to Google CLoud
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: üè∑Ô∏è Extract tags from GitHub
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: gcr.io/${{ secrets.PROJECT_ID }}/app
          tags: |
            type=ref,suffix=-{{sha}},event=branch
            type=ref,prefix=pr-,suffix=-{{sha}},event=pr
            type=semver,pattern={{version}}
            latest

      - name: üì¶ Build and push image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üöÄ Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: printproxy
          image: gcr.io/${{ secrets.PROJECT_ID }}/app
          region: us-central1
          env_vars: "OPEN_QUAD_WORD=${{ secrets.QUAD_WORD }}"
          flags: |
            --service-account=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
            --allow-unauthenticated

  deploy-prod:
    name: Build and Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    environment:
      name: Production
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
      - run: npm ci

      - id: auth
        name: üóùÔ∏è Authenticate to Google Cloud
        uses: google-github-actions/auth@v0
        with:
          create_credentials_file: true
          token_format: access_token
          workload_identity_provider: ${{ secrets.IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT_EMAIL }}

      - name: üê≥ Set up Docker Buildx
        id: builder
        uses: docker/setup-buildx-action@v1

      - name: üóùÔ∏è Authenticate Docker to Google CLoud
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: üè∑Ô∏è Extract tags from GitHub
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: gcr.io/${{ secrets.PROJECT_ID }}/app
          tags: |
            type=ref,suffix=-{{sha}},event=branch
            type=ref,prefix=pr-,suffix=-{{sha}},event=pr
            type=semver,pattern={{version}}
            latest

      - name: üì¶ Build and push image
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.builder.outputs.name }}
          tags: ${{ steps.meta.outputs.tags }}
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üöÄ Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: printproxy
          image: gcr.io/${{ secrets.PROJECT_ID }}/app
          region: us-central1
          env_vars: "OPEN_QUAD_WORD=${{ secrets.QUAD_WORD }}"
          flags: |
            --service-account=cloud-run-sa@${{ secrets.PROJECT_ID }}.iam.gserviceaccount.com
            --allow-unauthenticated
            --concurrency=80
            --cpu=1
            --max-instances=10
            --memory=256Mi
            --port=8080
            --timeout=300s
